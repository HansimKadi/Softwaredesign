using App.Entities;
using System.Linq;
using System.Collections.Generic;

namespace App
{
    internal class Program
    {
        static void Main(string[] args)
        {
            SchoolDBContext db = new();
            // The id will be generated by the database ie auto-increment
            //Education education = new()
            //{
            //    Name = "Computer Science",
            //};

            //Education education2 = new();
            //education2.Name = "Mathematics";

            //db.Educations.Add(education);
            //db.Educations.Add(education2);
            //db.SaveChanges();


            //List<Student> students = new()
            //{
            //    new Student() { Name = "Alice", EducationId = education.Id },
            //    new Student() { Name = "Bob", EducationId = 2 },// we can also use hardcoded id if we know it
            //    new Student() { Name = "Charlie", EducationId = education2.Id },
            //};

            //db.Students.AddRange(students);
            //db.SaveChanges();
            List<Student> students = db.Students.ToList();
            foreach (var student in students)
            {
                Console.WriteLine($"Student: {student.Name}, EducationId: {student.EducationId}");
            }

            Console.WriteLine("with to string overide");

            foreach (var student in students)
            {
                Console.WriteLine(student);
            }

            // Using Linq to query examples
            List<Student> students_ = db.Students.Select(s => s.Name).ToList();
            List<Student> csStudents = db.Students
                                        .Where(s => s.EducationId == 1)
                                        .ToList();
            //order by
            List<Student> orderedStudents = db.Students
                                            .OrderBy(s => s.Name)
                                            .ToList();
        }
    }
}
